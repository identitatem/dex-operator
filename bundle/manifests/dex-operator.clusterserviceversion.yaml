apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "auth.identitatem.io/v1alpha1",
          "kind": "DexClient",
          "metadata": {
            "name": "dexclient-sample"
          },
          "spec": {
            "clientID": "openshift-client-id-example",
            "clientSecret": "plain-text-openshift-client-secret-example",
            "redirectURIs": [
              "https://oauth-openshift.apps.pool-sno-8x32-n9kps.demo.red-chesterfield.com/oauth2callback/dexclient-sample"
            ]
          }
        },
        {
          "apiVersion": "auth.identitatem.io/v1alpha1",
          "kind": "DexServer",
          "metadata": {
            "name": "dexserver-sample"
          },
          "spec": {
            "connectors": [
              {
                "config": {
                  "clientID": "github-oauth-sample-id",
                  "clientSecretRef": "github-secretref"
                },
                "id": "github",
                "name": "github",
                "type": "github"
              }
            ],
            "enablePasswordDB": false,
            "expiry": {
              "deviceRequests": "5m",
              "idTokens": "24h",
              "refreshTokens": {
                "absoluteLifetime": "3960h",
                "reuseInterval": "3s",
                "validIfNotUsedFor": "2160h"
              },
              "signingKeys": "6h"
            },
            "grpc": {
              "addr": "0.0.0.0:5557",
              "tlsCert": "secretRef",
              "tlsClientCA": "secretRef",
              "tlsKey": "secretRef"
            },
            "issuer": "https://dexserver-sample.apps.pool-sno-8x32-n9kps.demo.red-chesterfield.com/dex",
            "logger": {
              "format": "json",
              "level": "1"
            },
            "oauth2": {
              "alwasyShowLoginScreen": false,
              "passwordConnector": "local",
              "responseTypes": [
                "code",
                "token"
              ],
              "skipApprovalScreen": false
            },
            "storage": {
              "config": {
                "inCluster": true
              },
              "type": "kubernetes"
            },
            "web": {
              "http": "0.0.0.0:5556",
              "tlsCert": "secretRef",
              "tlsKey": "secretRef"
            }
          }
        }
      ]
    capabilities: Basic Install
    operators.operatorframework.io/builder: operator-sdk-v1.9.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
  name: dex-operator.v0.0.4
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: DexClient is the Schema for the dexclients API
      displayName: Dex Client
      kind: DexClient
      name: dexclients.auth.identitatem.io
      version: v1alpha1
    - description: DexServer is the Schema for the dexservers API
      displayName: Dex Server
      kind: DexServer
      name: dexservers.auth.identitatem.io
      version: v1alpha1
  description: dex operator
  displayName: dex-operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - auth.identitatem.io
          resources:
          - dexclients
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - auth.identitatem.io
          resources:
          - dexclients/finalizers
          verbs:
          - update
        - apiGroups:
          - auth.identitatem.io
          resources:
          - dexclients/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - auth.identitatem.io
          resources:
          - dexservers
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - auth.identitatem.io
          resources:
          - dexservers/finalizers
          verbs:
          - update
        - apiGroups:
          - auth.identitatem.io
          resources:
          - dexservers/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - ""
          resources:
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - watch
        - apiGroups:
          - ""
          resources:
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          verbs:
          - bind
          - create
          - delete
          - escalate
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes/custom-host
          verbs:
          - create
          - patch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: dex-operator-controller-manager
      deployments:
      - name: dex-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              - args:
                - --health-probe-bind-address=:8081
                - --metrics-bind-address=127.0.0.1:8080
                - --leader-elect
                command:
                - /manager
                image: quay.io/cdoan/dex-operator:0.0.4
                imagePullPolicy: Always
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 700Mi
                  requests:
                    cpu: 500m
                    memory: 700Mi
                securityContext:
                  allowPrivilegeEscalation: false
              securityContext:
                runAsNonRoot: true
              serviceAccountName: dex-operator-controller-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: dex-operator-controller-manager
    strategy: deployment
  installModes:
  - supported: false
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - dex
  - operator
  links:
  - name: Dex Operator
    url: https://dex-operator.domain
  maintainers:
  - email: cdoan@redhat.com
    name: cdoan
  maturity: alpha
  provider:
    name: redhat.com
    url: redhat.com
  version: 0.0.4
