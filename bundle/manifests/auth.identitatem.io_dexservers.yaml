apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: dexservers.auth.identitatem.io
spec:
  group: auth.identitatem.io
  names:
    kind: DexServer
    listKind: DexServerList
    plural: dexservers
    singular: dexserver
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DexServer is the Schema for the dexservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DexServerSpec defines the desired state of DexServer
            properties:
              connectors:
                items:
                  description: ConnectorSpec defines the OIDC connector config details
                  properties:
                    config:
                      description: ConfigSpec describes the client id and secret.
                        The RedirectURI should be returned?
                      properties:
                        clientID:
                          type: string
                        clientSecretRef:
                          description: 'ObjectReference contains enough information
                            to let you inspect or modify the referred object. ---
                            New uses of this type are discouraged because of difficulty
                            describing its usage when embedded in APIs.  1. Ignored
                            fields.  It includes many fields which are not generally
                            honored.  For instance, ResourceVersion and FieldPath
                            are both very rarely valid in actual usage.  2. Invalid
                            usage help.  It is impossible to add specific help for
                            individual usage.  In most embedded usages, there are
                            particular     restrictions like, "must refer only to
                            types A and B" or "UID not honored" or "name must be restricted".     Those
                            cannot be well described when embedded.  3. Inconsistent
                            validation.  Because the usages are different, the validation
                            rules are different by usage, which makes it hard for
                            users to predict what will happen.  4. The fields are
                            both imprecise and overly precise.  Kind is not a precise
                            mapping to a URL. This can produce ambiguity     during
                            interpretation and require a REST mapping.  In most cases,
                            the dependency is on the group,resource tuple     and
                            the version of the actual struct is irrelevant.  5. We
                            cannot easily change it.  Because this type is embedded
                            in many locations, updates to this type     will affect
                            numerous schemas.  Don''t make new APIs embed an underspecified
                            API type they do not control. Instead of using this type,
                            create a locally provided and used type that is well-focused
                            on your reference. For example, ServiceReferences for
                            admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                            .'
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead
                                of an entire object, this string should contain a
                                valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container
                                within a pod, this would take on a value like: "spec.containers{name}"
                                (where "name" refers to the name of the container
                                that triggered the event) or if no container name
                                is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to
                                have some well-defined way of referencing a part of
                                an object. TODO: this design is not final and this
                                field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info:
                                https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this
                                reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                        org:
                          type: string
                        redirectURI:
                          description: 'TODO: confirm if we set this, or allow this
                            to be passed in?'
                          type: string
                      type: object
                    id:
                      type: string
                    name:
                      type: string
                    type:
                      enum:
                      - github
                      - ldap
                      type: string
                  type: object
                type: array
              enablepassworddb:
                type: boolean
              expiry:
                description: ExpirySpec defines how we expire
                properties:
                  deviceRequests:
                    type: string
                type: object
              foo:
                description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                  Important: Run "make" to regenerate code after modifying this file
                  Foo is an example field of DexServer. Edit dexserver_types.go to
                  remove/update'
                type: string
              grpc:
                description: GrpcSpec defines override options on how we run grpc
                  server. Addr should not need to change. The certs are required.
                properties:
                  addr:
                    type: string
                  tlsCert:
                    type: string
                  tlsClientCA:
                    type: string
                  tlsKey:
                    type: string
                type: object
              issuer:
                description: 'TODO: Issuer references the dex instance web URI. Should
                  this be returned as status?'
                type: string
              logger:
                description: LoggerSpec defines loggingoptions. Optional
                properties:
                  format:
                    type: string
                  level:
                    type: string
                type: object
              oauth2:
                description: Oauth2Spec defines dex behavior flags
                properties:
                  alwaysShowLoginScreen:
                    type: boolean
                  passwordConnector:
                    type: string
                  responseTypes:
                    items:
                      type: string
                    type: array
                  skipApprovalScreen:
                    type: boolean
                type: object
              staticpasswords:
                items:
                  description: StaticPasswordSpec allows us to define login credentials.
                    Do not expect us to use this.
                  properties:
                    email:
                      type: string
                  type: object
                type: array
              storage:
                description: StorageSpec defines how/if we persist the configuration
                  to a database on store in K8s.
                properties:
                  type:
                    type: string
                type: object
              web:
                description: WebSpec defines override for cert to dex server.
                properties:
                  http:
                    type: string
                  https:
                    type: string
                  tlsCert:
                    type: string
                  tlsKey:
                    type: string
                type: object
            type: object
          status:
            description: DexServerStatus defines the observed state of DexServer
            properties:
              message:
                type: string
              state:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
